name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Запускать только для ветки main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Проверяем код из репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Устанавливаем Java и Gradle
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 21 # Укажите версию Java, подходящую для вашего проекта
          distribution: 'temurin'

      # Кэшируем Gradle зависимости
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Запускаем тесты с помощью Gradle
      - name: Run tests
        run: ./gradlew test

  deploy:
    # Этот шаг выполняется только после успешного завершения тестов
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Устанавливаем SSH для подключения к удаленному серверу
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # Копируем проект на удаленный сервер
      - name: Copy project files to remote server
        run: |
          rsync -avz --exclude='.git/' . root@185.121.134.83:/task-manager

      # Выполняем docker-compose на удаленном сервере
      - name: Deploy with Docker Compose
        run: |
          ssh root@185.121.134.83 "cd /task-manager && docker-compose -f docker-compose-production.yml down && docker-compose -f docker-compose-production.yml up -d"